---
title: "Lieber 2024 TRACE ISA Replicate Analysis"
author: "Bob Policastro"
format: html
editor: visual
---

## Libraries

Load the required libraries for the analysis.

```{r}
library("tidyverse")
library("patchwork")
library("GGally")
```

## Prepare Data

Load the annotated insertion sites from the Ensoma TRACE ISA workflow.

```{r}
isa_files <-
  file.path("data", "insertion_sites") |>
  list.files(pattern="\\.tsv$", full.names=TRUE)

isa <- isa_files |>
  tibble(file_path=_) |>
  mutate(
    file_name=basename(file_path),
    data=map(file_path, read_tsv, show_col_types=FALSE)
  ) |>
  unnest(data) |>
  # Remove the Illumina stuff from the sample names.
  mutate(file_id=str_remove(sample_id, "_S\\d+_L00\\d\\.\\S+$")) |>
  relocate(file_id, .after=sample_id)
```

Load the sample sheet that has additional info for each sample.
Then merge the information with the ISA results.

```{r}
sample_sheet <- read_csv(
  file.path("data", "sample_sheet.csv"), show_col_types=FALSE
)

isa <- left_join(isa, sample_sheet, by="file_id")
```

Only keep insertion sites that appear in at least 2 of 3 technical replicates.
Return the sum of UMIs for the group of technical replicates.

```{r}
# isa <- isa |>
#   group_by(sample_name, seqnames, start, end, strand) |>
#   filter(n() > 1) |>
#   ungroup() |>
#   group_by(
#     sample_name, seqnames, start, end, strand, annotation, tss_distance 
#   ) |>
#   summarize(score=sum(score), .groups="drop")
```

Set the factor levels of the sample names so they appear in a consistent order
in the plots.

```{r}
# sample_name_order <- c(
#   "Human K562 60.00%", "Mouse PBMC 65.10%", "Mouse PBMC 62.20%",
#   "Mouse PBMC 38.90%", "Mouse PBMC 37.00%", "Mouse PBMC 25.00%",
#   "Mouse PBMC 0.00%"
# )
# 
# isa <- mutate(
#   isa, sample_name=factor(sample_name, levels=sample_name_order)
# )
```

## Replicate Correlation

Replicate correlation before filtering.

```{r}
df <- isa |>
  mutate(
    file_id=str_replace_all(file_id, "-", "_")
  ) |>
  select(sample_name, file_id, seqnames, start, end, strand, score) |>
  split(~sample_name) |>
  map(\(x) {
    x <- x |>
      pivot_wider(names_from=file_id, values_from=score, values_fill=0) |>
      select(!c(sample_name, seqnames, start, end, strand))
    return(x)
  }) |>
  map(ggpairs)
```

Replicate correlation after filtering.

```{r}
p <- isa |>
  group_by(sample_name, seqnames, start, end, strand) |>
  filter(n() > 1) |>
  ungroup() |>
  mutate(
    file_id=str_replace_all(file_id, "-", "_")
  ) |>
  select(sample_name, file_id, seqnames, start, end, strand, score) |>
  split(~sample_name) |>
  map(\(x) {
    x <- x |>
      pivot_wider(names_from=file_id, values_from=score, values_fill=0) |>
      select(!c(sample_name, seqnames, start, end, strand))
    return(x)
  }) |>
  imap(\(x, y) {
    ggpairs(x) +
      theme_bw() +
      labs(title=y)
  })
```